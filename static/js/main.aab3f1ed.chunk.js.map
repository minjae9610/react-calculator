{"version":3,"sources":["components/Panel.jsx","components/History.jsx","components/Display.jsx","components/ButtonGroup.jsx","components/Button.jsx","components/Calculator.jsx","index.js"],"names":["Container","styled","div","_templateObject","Panel","react","this","props","children","React","History_templateObject","History","History_Container","data-testid","Display_templateObject","Display","Display_Container","data-display","displayValue","ButtonGroup_templateObject","ButtonGroup","handleClick","e","_this","onClickButton","target","textContent","ButtonGroup_Container","onClick","Button_templateObject","p","size","Button","_this$props","_this$props$size","color","Button_Container","data-color","Calculator_templateObject","Box","_templateObject2","evalFunc","string","replace","Function","Calculator","state","history","key","_this$state$displayVa","lastChar","substr","length","operatorKeys","proc","AC","setState","BS","√","includes","Math","sqrt","÷","×","-","+","=","unshift",".","splitValue","split","reverse","0","Number","Calculator_Container","components_Panel","components_Display","components_ButtonGroup","components_Button","components_History","map","equation","ReactDOM","render","react_default","a","createElement","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.aab3f1ed.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 10px auto;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nclass Panel extends React.Component {\r\n  render() {\r\n    return <Container>{this.props.children}</Container>;\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 300px;\r\n  height: 374px;\r\n  padding: 10px;\r\n  margin: 20px auto;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  overflow-y: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  ::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`;\r\n\r\n// TODO: Panel 을 참고해서 History component 생성 및 export\r\nclass History extends React.Component {\r\n  render() {\r\n    return <Container data-testid=\"history\">{this.props.children}</Container>;\r\n  }\r\n}\r\n\r\nexport default History;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 5px;\r\n  [data-display] {\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n    text-align: left;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    padding: 0 15px;\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div data-testid=\"display\" data-display>{this.props.displayValue}</div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n`;\r\n\r\nclass ButtonGroup extends React.Component {\r\n  handleClick = e => {\r\n    this.props.onClickButton(e.target.textContent);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container onClick={this.handleClick}>{this.props.children}</Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  float: left;\r\n  width: ${p => (p.size / 4) * 100}%;\r\n  padding: 5px;\r\n  button {\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    :hover {\r\n      background: #eee;\r\n    }\r\n    :active {\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n    }\r\n    color: #000;\r\n    font-size: 20px;\r\n    line-height: 40px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    background: transparent;\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n\r\n    &[data-color=\"gray\"] {\r\n      background: #eee;\r\n      :hover {\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { size = 1, color, children } = this.props;\r\n    return (\r\n      <Container size={size}>\r\n        <button data-color={color}>{children}</button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Panel from \"./Panel\";\r\nimport History from \"./History\";\r\nimport Display from \"./Display\";\r\nimport ButtonGroup from \"./ButtonGroup\";\r\nimport Button from \"./Button\";\r\n\r\nconst Container = styled.div`\r\n  margin: 30px auto;\r\n  text-align: center;\r\n`;\r\n\r\n// TODO: History 내에서 수식 표시할 때 사용\r\nconst Box = styled.div`\r\n  display: inline-block;\r\n  width: 270px;\r\n  height: 65px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: right;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  h3 {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst evalFunc = function(string) {\r\n  string = string.replace(/×/g, \"*\")\r\n  string = string.replace(/÷/g, \"/\")\r\n  // eslint-disable-next-line no-new-func\r\n  return new Function(\"return (\" + string + \")\")();\r\n};\r\n\r\nclass Calculator extends React.Component {\r\n  // TODO: history 추가\r\n  state = {\r\n    displayValue: \"\",\r\n    history: []\r\n  };\r\n\r\n  onClickButton = key => {\r\n    let { displayValue = \"\" } = this.state;\r\n    displayValue = \"\" + displayValue;\r\n    const lastChar = displayValue.substr(displayValue.length - 1);\r\n    const operatorKeys = [\"÷\", \"×\", \"-\", \"+\"];\r\n    const proc = {\r\n      AC: () => {\r\n        this.setState({ displayValue: \"\" });\r\n      },\r\n      BS: () => {\r\n        if (displayValue.length > 0) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      // TODO: 제곱근 구현\r\n      \"√\": () => {\r\n        if (lastChar !== \"\") {\r\n          if (operatorKeys.includes(lastChar)){\r\n            displayValue = displayValue.substr(0, displayValue.length - 1);\r\n          }\r\n          displayValue = evalFunc(displayValue);\r\n          displayValue = Math.sqrt(displayValue)\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      // TODO: 사칙연산 구현\r\n      \"÷\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"÷\" });\r\n        }\r\n      },\r\n      \"×\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"×\" });\r\n        }\r\n      },\r\n      \"-\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"-\" });\r\n        }\r\n      },\r\n      \"+\": () => {\r\n        // + 연산 참고하여 연산 구현\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"+\" });\r\n        }\r\n      },\r\n      \"=\": () => {\r\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        } else if (lastChar !== \"\") {\r\n          this.state.history.unshift(displayValue)\r\n          displayValue = evalFunc(displayValue);\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      \".\": () => {\r\n        let splitValue = displayValue.split(\"+\", -1).reverse()[0];\r\n        splitValue = splitValue.split(\"-\", -1).reverse()[0];\r\n        splitValue = splitValue.split(\"×\", -1).reverse()[0];\r\n        splitValue = splitValue.split(\"÷\", -1).reverse()[0];\r\n        if (lastChar !== \"\" && splitValue !== \"\" && !splitValue.includes(\".\")) {\r\n          this.setState({ displayValue: displayValue + \".\" });\r\n        }\r\n      },\r\n      \"0\": () => {\r\n        if (Number(displayValue) !== 0) {\r\n          displayValue += \"0\";\r\n          this.setState({ displayValue });\r\n        }\r\n      }\r\n    };\r\n\r\n    if (proc[key]) {\r\n      proc[key]();\r\n    } else {\r\n      // 여긴 숫자\r\n      this.setState({ displayValue: displayValue + key });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Panel>\r\n          <Display displayValue={this.state.displayValue} />\r\n          <ButtonGroup onClickButton={this.onClickButton}>\r\n            <Button size={1} color=\"gray\">\r\n              AC\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              BS\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              √\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              ÷\r\n            </Button>\r\n\r\n            <Button size={1}>7</Button>\r\n            <Button size={1}>8</Button>\r\n            <Button size={1}>9</Button>\r\n            <Button size={1} color=\"gray\">\r\n              ×\r\n            </Button>\r\n\r\n            <Button size={1}>4</Button>\r\n            <Button size={1}>5</Button>\r\n            <Button size={1}>6</Button>\r\n            <Button size={1} color=\"gray\">\r\n              -\r\n            </Button>\r\n\r\n            <Button size={1}>1</Button>\r\n            <Button size={1}>2</Button>\r\n            <Button size={1}>3</Button>\r\n            <Button size={1} color=\"gray\">\r\n              +\r\n            </Button>\r\n\r\n            <Button size={2}>0</Button>\r\n            <Button size={1}>.</Button>\r\n            <Button size={1} color=\"gray\">\r\n              =\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Panel>\r\n        <History>\r\n          {/* TODO: History componet를 이용해 map 함수와 Box styled div를 이용해 history 표시 */\r\n            this.state.history.map(equation => <Box>{equation + \"<br/>= \" + evalFunc(equation)}</Box>)\r\n          }\r\n        </History>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport Calculator from \"./components/Calculator\";\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}